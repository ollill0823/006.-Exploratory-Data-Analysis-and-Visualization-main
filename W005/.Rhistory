library(car)
plot(randomdat[,c(1:7,11)])
randomdat$var5
summary(randomdat$var5)
barplot(randomdat$var5)
barplot(var5, data = randomdat)
barplot(randomdat$var5)
barplot(randomdat$var3)
plot(randomdat$var3)
randomdat$var5[which(randomdat$var5)]
randomdat$var5[which(randomdat$var5),]
randomdat$var5[which(randomdat$var5<800),]
randomdat[which(randomdat$var5<800),]
randomdat800up <- randomdat[which(randomdat$var5 >= 800),]
summary(randomdat800up)
randomdat[which(randomdat$var5<800),]
randomdat <- randomdat[which(randomdat$var5<800),]
summary(randomdat800up)
summary(randomdat)
plot(randomdat[,c(1:7,11)])
summary(randomdat$var6)
randomdat$var6
ml <- lm(var1~var2, data = randomdat)
abline(ml)
ml <- lm(var1~var2, data = randomdat)
abline(ml)
plot(m1)
m1 <- lm(var1~var2, data = randomdat)
abline(m1)
plot(m1)
plot(random$dat$var1, randomdat$var2)
plot(randomdat$var1, randomdat$var2)
smooth <- smooth.spline(randomdat$var1,randomdat$var2, spar=1 )
smooth
lines(smooth)
smooth <- smooth.spline(randomdat$var1,randomdat$var2, spar=2 )
lines(smooth)
smooth <- smooth.spline(randomdat$var1,randomdat$var2, spar=3 )
lines(smooth)
smooth <- smooth.spline(randomdat$var1,randomdat$var2, spar=1 )
lines(smooth)
m1 <- lm(var1~var2, data = randomdat)
abline(m1)
plot(m1)
smooth <- smooth.spline(randomdat$var1,randomdat$var2, spar=1 )
lines(smooth)
plot(randomdat$var1, randomdat$var2)
smooth <- smooth.spline(randomdat$var1,randomdat$var2, spar=1 )
lines(smooth)
plot(randomdat$var1, randomdat$var2)
smooth <- smooth.spline(randomdat$var1,randomdat$var2, spar=1 )
lines(smooth)
abline(m1)
plot(randomdat$var1, randomdat$var2)
smooth <- smooth.spline(randomdat$var1,randomdat$var2, spar=1 )
lines(smooth)
abline(m1)
plot(randomdat$var1, randomdat$var2)
smooth <- smooth.spline(randomdat$var1,randomdat$var2, spar=1 )
lines(smooth)
abline(m1)
plot(randomdat$var1, randomdat$var2)
lines(smooth, col = 'red', lwd =2, lty = 2)
abline(m1)
plot(randomdat$var1,randomdat$var2)
abline(m1)
smooth <- smooth.spline(randomdat$var1,randomdat$var2, spar=1)
lines(smooth, col='red', lwd = 2, lty = 2
plot(randomdat$var1,randomdat$var2)
abline(m1)
smooth <- smooth.spline(randomdat$var1,randomdat$var2, spar=1)
lines(smooth, col='red', lwd = 2, lty = 2)
m1 <- lm(var2~var1, data = randomdat)
plot(randomdat$var1,randomdat$var2)
abline(m1)
m2 <- lm(var1~var2, data = randomdat)
plot(randomdat$var1,randomdat$var2)
abline(m1)
abline(m2)
randomdatvar1sq <- randomdat$var1^2
randomdat$var5
randomdat$var1sq <- randomdat$var1^2
m2 <- lm(var2~var1sq, data = randomdat)
plot(randomdat$var1sq, randomdat$var2)
abline(m2)
smooth2 <- smooth.spline(randomdat$var1sq, randomdat$var2, spar = 1)
lines(smooth2)
m2 <- lm(var2~var1sq, data = randomdat)
plot(randomdat$var1sq, randomdat$var2)
abline(m2)
smooth2 <- smooth.spline(randomdat$var1sq, randomdat$var2, spar = 1)
lines(smooth2, color='green', lwd=2, lty =2)
m2 <- lm(var2~var1sq, data = randomdat)
plot(randomdat$var1sq, randomdat$var2)
abline(m2)
smooth2 <- smooth.spline(randomdat$var1sq, randomdat$var2, spar = 1)
lines(smooth2, col='green', lwd=2, lty =2)
m2 <- lm(var2~var1sq, data = randomdat)
plot(randomdat$var1sq, randomdat$var2)
abline(m2)
smooth2 <- smooth.spline(randomdat$var1sq, randomdat$var2, spar = 1)
lines(smooth2, col='blue', lwd=2, lty =2)
plot(m2)
m2 <- lm(var2~var1sq, data = randomdat)
plot(randomdat$var1sq, randomdat$var2)
abline(m2)
plot(m2)
m2_no43<- lm(var2~var1sq, data = randomdat[-c(41,43),])
plot(randomdat$var1sq, randomdat$var2)
abline(m2_no43)
m2_no43<- lm(var2~var1sq, data = randomdat[-c(41,43),])
plot(randomdat$var1sq, randomdat$var2)
abline(m2_no43)
abline(m2, col = "blue", lty = 2)
plot(m2_no43)
summary(m2_no43)
summary(m2)
summary(m1)
m3 <- lm (var2~var1, var1sq, data = randomdat)
summary(m3)
m3 <- lm (var2~var1+var1sq, data = randomdat)
summary(m3)
m4 <- lm(var2~var1+ I(var1^2), data = randomdat)
summary(m4)
m5 <- lm(var2~var1+ var1^2, data = randomdat)
summary(m5)
var1seq <- seq(-60, 220, 10)
var1seq
me_predict <- predict(m3, list(var1 = var1seq))
var1seq <- seq(-60, 220, 10)
me_predict <- predict(m3, list(var1 = var1seq))
(m3,list(var1=var1seq))
m3_predict <- predict(m3,list(var1=var1seq))
var1seq <- seq(-60, 220, 10)
me_predict <- predict(m3, list(var1 = var1seq))
m3 <- lm (var2~var1+var1sq, data = randomdat)
m3 <- lm(var2~var1+ I(var1^2), data = randomdat)
me_predict <- predict(m3, list(var1 = var1seq))
me_predict
plot(randomdat$var1, randomdat$var2)
lines(var1sq)
lines(var1sq, m3_presict, col='red', lwd = 2, lth = 2)
lines(var1seq, m3_presict, col='red', lwd = 2, lth = 2)
lines(var1seq, m3_predict, col='red', lwd = 2, lth = 2)
lines(var1seq, m3_predict, col='red', lwd = 2, lth = 2)
m3_predict <- predict(m3, list(var1 = var1seq))
lines(var1seq, m3_predict, col='red', lwd = 2, lth = 2)
predict(m3, list(var1 = 0))
predict(m3, list(var1 = 100))
plot(m3)
plot(randomdat$var1, randomdat$var3)
plot(randomdat$var1, randomdat$var3)
m4_smooth <- smooth.spline(randomdat$var1, randomdat$var3, spar = 1)
lines(m4_smooth, col='red', lwd = 2, lth = 2)
m4 <- lm(var2~var1 + I(var1^2) + I(var1^3), data = randomdat)
m4
summary(m4)
m4_predict <- predict(m4, list(var1 = var1seq))
plot(randomdat$var1, randomdat$var3)
lines(var1seq, m4_predict, col='red', lwd = 2, lth = 2)
plot(randomdat$var1, randomdat$var3)
plot(randomdat$var1, randomdat$var3)
lines(m4_smooth, col='red', lwd = 2, lth = 2)
lines(var1seq, m4_predict, col='blue', lwd = 2, lth = 2)
m4_predict
m4<-lm(var3~var1+I(var1^2)+I(var1^3), data=randomdat)
m4_predict<- predict(m4,list(var1=var1seq))			## var1seq was -60 to 220 by 10's...
lines(var1seq, m4_predict, col = "blue", lwd = 3)
summary(m4)
## Our regression equation looks like:
## y = b0 + b1 * var1 + b2 * var1^2 + b3 * var1^3
## var3 = -173804.07 + 11069.23*var1 - 183.90*var1^2 + 1.01*var1^3
m4<-lm(var3~var1+I(var1^2)+I(var1^3), data=randomdat)
plot(randomdat$var1, randomdat$var3)
m4<-lm(var3~var1+I(var1^2)+I(var1^3), data=randomdat)
m4_predict<- predict(m4,list(var1=var1seq))			## var1seq was -60 to 220 by 10's...
lines(var1seq, m4_predict, col = "blue", lwd = 3)
summary(m4)
## Our regression equation looks like:
## y = b0 + b1 * var1 + b2 * var1^2 + b3 * var1^3
## var3 = -173804.07 + 11069.23*var1 - 183.90*var1^2 + 1.01*var1^3
predict(m4, list(var1=65))
plot(randomdat$var1, randomdat$var3)
lines(m4_smooth, col='red', lwd = 2, lth = 2)
lines(var1seq, m4_predict, col='blue', lwd = 2, lth = 2)
m4 <- lm(var2~var1 + I(var1^2) + I(var1^3), data = randomdat)
m4_predict <- predict(m4, list(var1 = var1seq))
plot(randomdat$var1, randomdat$var3)
lines(var1seq, m4_predict, col='blue', lwd = 2, lth = 2)
m4 <- lm(var3~var1 + I(var1^2) + I(var1^3), data = randomdat)
plot(randomdat$var1, randomdat$var3)
lines(m4_smooth, col='red', lwd = 2, lth = 2)
lines(var1seq, m4_predict, col='blue', lwd = 2, lth = 2)
m4_predict <- predict(m4, list(var1 = var1seq))
plot(randomdat$var1, randomdat$var3)
lines(m4_smooth, col='red', lwd = 2, lth = 2)
lines(var1seq, m4_predict, col='blue', lwd = 2, lth = 2)
plot(m4)
summary(m4)
summary(m3)
plot(randomdat$var1, randomdat$var4)
smooth4 <- smooth.spline(randomdat$var1, randomdat$var4, spar = 1)
abline(smooth4)
plot(randomdat$var1, randomdat$var4)
smooth4 <- smooth.spline(randomdat$var1, randomdat$var4, spar = 1)
abline(smooth4)
m2_no43<- lm(var2~var1sq, data = randomdat[-c(41,43),])
plot(randomdat$var1sq, randomdat$var2)
abline(m2_no43)
lines(smooth4, col = 'red', lwd = 2, lth = 2)
plot(randomdat$var1, randomdat$var4)
smooth4 <- smooth.spline(randomdat$var1, randomdat$var4, spar = 1)
lines(smooth4, col='red', lwd = 2, lth = 2)
m41 <- lm(var4~var1, data = randomdat)
lines(m41, col='blue', lwd = 2, lth = 2)
abline(m41, col='blue', lwd = 2, lth = 2)
plot(m41)
predict(m3, list(var1 = 0))
m42 <- lm(var4~var1 + I(var1^2), data = randomdat)
m42_prediction <- prediction(m4, list(var1 = var1seq))
lines(var1seq, m42_prediction,ol='orange', lwd = 2, lth = 2 )
m42 <- lm(var4~var1 + I(var1^2), data = randomdat)
m42_prediction <- prediction(m4, list(var1 = var1seq))
lines(var1seq, m42_prediction,ol='orange', lwd = 2, lth = 2 )
m42_prediction <- prediction(m4, list(var1 = var1seq))
m42_prediction <- predict(m4, list(var1 = var1seq))
lines(var1seq, m42_prediction,ol='orange', lwd = 2, lth = 2 )
lines(smooth4, col='red', lwd = 2, lth = 2)
m41 <- lm(var4~var1, data = randomdat)
abline(m41, col='blue', lwd = 2, lth = 2)
plot(m41)
plot(randomdat$var1, randomdat$var4)
smooth4 <- smooth.spline(randomdat$var1, randomdat$var4, spar = 1)
lines(smooth4, col='red', lwd = 2, lth = 2)
m41 <- lm(var4~var1, data = randomdat)
abline(m41, col='blue', lwd = 2, lth = 2)
m42 <- lm(var4~var1 + I(var1^2), data = randomdat)
m42_prediction <- predict(m4, list(var1 = var1seq))
lines(var1seq, m42_prediction,ol='orange', lwd = 2, lth = 2 )
plot(randomdat$var1, randomdat$var4)
smooth4 <- smooth.spline(randomdat$var1, randomdat$var4, spar = 1)
lines(smooth4, col='red', lwd = 2, lth = 2)
m41 <- lm(var4~var1, data = randomdat)
abline(m41, col='blue', lwd = 2, lth = 2)
plot(randomdat$var1, randomdat$var3)
lines(m4_smooth, col='red', lwd = 2, lth = 2)
lines(var1seq, m4_predict, col='blue', lwd = 2, lth = 2)
m42_prediction
plot(randomdat$var1, randomdat$var4)
smooth4 <- smooth.spline(randomdat$var1, randomdat$var4, spar = 1)
lines(smooth4, col='red', lwd = 2, lth = 2)
m41 <- lm(var4~var1, data = randomdat)
abline(m41, col='blue', lwd = 2, lth = 2)
m42 <- lm(var4~var1 + I(var1^2), data = randomdat)
m42_prediction <- predict(m4, list(var1 = var1seq))
lines(var1seq, m42_prediction,ol='orange', lwd = 2, lth = 2 )
m42_prediction
m42_prediction <- predict(m42, list(var1 = var1seq))
lines(var1seq, m42_prediction,ol='orange', lwd = 2, lth = 2 )
plot(randomdat$var1, randomdat$var4)
smooth4 <- smooth.spline(randomdat$var1, randomdat$var4, spar = 1)
lines(smooth4, col='red', lwd = 2, lth = 2)
m41 <- lm(var4~var1, data = randomdat)
abline(m41, col='blue', lwd = 2, lth = 2)
m42 <- lm(var4~var1 + I(var1^2), data = randomdat)
m42_prediction <- predict(m42, list(var1 = var1seq))
lines(var1seq, m42_prediction,ol='orange', lwd = 2, lth = 2 )
plot(randomdat$var1, randomdat$var4)
smooth4 <- smooth.spline(randomdat$var1, randomdat$var4, spar = 1)
lines(smooth4, col='red', lwd = 2, lth = 2)
m41 <- lm(var4~var1, data = randomdat)
abline(m41, col='blue', lwd = 2, lth = 2)
m42 <- lm(var4~var1 + I(var1^2), data = randomdat)
m42_prediction <- predict(m42, list(var1 = var1seq))
lines(var1seq, m42_prediction,col='orange', lwd = 2, lth = 2 )
plot(m42_prediction)
plot(randomdat$var1, randomdat$var4)
plot(randomdat$var1+50, randomdat$var4)
plot(sqrt(randomdat$var1+50), randomdat$var4)
smooth4 <- smooth.spline(sqrt(randomdat$var1+50), randomdat$var4, spar = 1)
lines(smooth4, col = 'blue' lwd =3, lth = 2)
lines(smooth4, col = 'blue', lwd =3, lth = 2)
lines(smooth4, col = 'blue', lwd =2, lth = 3)
plot(sqrt(randomdat$var1+50), randomdat$var4)
smooth4 <- smooth.spline(sqrt(randomdat$var1+50), randomdat$var4, spar = 1)
lines(smooth4, col = 'blue', lwd =2, lth = 3)
lines(smooth4, col = 'blue', lwd =2, lth = 3)
lines(smooth4, col = 'blue', lwd = 2, lth = 2)
lines(smooth4, col = 'blue', lwd = 2, lty = 2)
plot(sqrt(randomdat$var1+50),randomdat$var4)
smooth <- smooth.spline(sqrt(randomdat$var1+50),randomdat$var4, spar=1)
lines(smooth, col='red', lwd = 2, lty = 2)
plot(sqrt(randomdat$var1+50),randomdat$var4)
smooth <- smooth.spline(sqrt(randomdat$var1+50),randomdat$var4, spar=1)
lines(smooth, col='red', lwd = 2, lty = 2)
plot(sqrt(randomdat$var1+50), randomdat$var4)
smooth4 <- smooth.spline(sqrt(randomdat$var1+50), randomdat$var4, spar = 1)
lines(smooth4, col='red', lwd = 2, lty = 2)
lines(smooth4, col = 'blue', lwd = 2, lty = 2)
lines(smooth4, col = 'blue', lwd = 2, lty = 2)
lines(smooth4, col='red', lwd = 2, lty = 2)
plot(sqrt(randomdat$var1+50), randomdat$var4)
smooth4 <- smooth.spline(sqrt(randomdat$var1+50), randomdat$var4, spar = 1)
lines(smooth4, col = 'blue', lwd = 2, lty = 2)
m5_orig <- lm(var4 ~ var1, data=randomdat)
m5_sqrt <- lm(var4 ~ var1sqrt, data=randomdat)
randomdat$var1sqrt <- sqrt(randomdat$var1+50)
## Two models, compare no transformation to sqrt transformation
m5_orig <- lm(var4 ~ var1, data=randomdat)
m5_sqrt <- lm(var4 ~ var1sqrt, data=randomdat)
m5_predict <- predict(m5_sqrt, list(var1 = sqrt(var1seq+50)))
m5_predict <- predict(m5_sqrt, list(var1 = sqrt(var1seq+50)))
m5_predict <- predict(m5_sqrt, list(var1sqrt = sqrt(var1seq+50)))
m5_sqrt <- lm(var4 ~ var1sqrt, data=randomdat)
m5_predict <- predict(m5_sqrt, list(var1sqrt = sqrt(var1seq+50)))
m5_predict<- predict(m5_sqrt,list(var1sqrt=sqrt(var1seq+50)))
plot(sqrt(randomdat$var1+50),randomdat$var4)
lines(sqrt(var1seq+50), m5_predict, col = "blue", lwd = 3)
randomdat$var1sqrt <- sqrt(randomdat$var1+50)
## Two models, compare no transformation to sqrt transformation
m5_orig <- lm(var4 ~ var1, data=randomdat)
m5_sqrt <- lm(var4 ~ var1sqrt, data=randomdat)
## You can also use
## m5_sqrt <- lm(var4~I(sqrt(var1+50)), data = randomdat)
m5_predict<- predict(m5_sqrt,list(var1sqrt=sqrt(var1seq+50)))
plot(sqrt(randomdat$var1+50),randomdat$var4)
lines(sqrt(var1seq+50), m5_predict, col = "blue", lwd = 3)
plot(sqrt(randomdat$var1+50),randomdat$var4)
plot(sqrt(randomdat$var1+50),randomdat$var4)
lines(sqrt(var1seq+50), m5_predict, col = "blue", lwd = 3)
plot(randomdat$var1, randomdat$var5)
plot(randomdat$var1+50, randomdat$var5)
plot(sqrt(randomdat$var1+50), randomdat$var5)
plot((randomdat$var1+50)^2, randomdat$var5)
plot((randomdat$var1+50), sqrt(randomdat$var5)
plot((randomdat$var1+50), sqrt(randomdat$var5))
plot(randomdat$var1+50, sqrt(randomdat$var5))
plot(randomdat$var1+50, (randomdat$var5)^2)
par(mfrow = c(1,3))
plot(randomdat$var1+50, randomdat$var5)
plot(sqrt(randomdat$var1+50), randomdat$var5)
plot((randomdat$var1+50)^2, randomdat$var5)
par(mfrow = c(1,3))
plot(randomdat$var1+50, randomdat$var5)
smooth_50 <- smooth.spline(randomdat$var1+50, randomdat$var5, spar = 1)
plot(sqrt(randomdat$var1+50), randomdat$var5)
smooth_sq50 <- smooth.spline(sqrt(randomdat$var1+50), randomdat$var5, spar = 1)
plot((randomdat$var1+50)^2, randomdat$var5)
smooth_square50 <- smooth.spline((randomdat$var1+50)^2, randomdat$var5, spar = 1)
plot(randomdat$var1+50, randomdat$var5)
smooth_50 <- smooth.spline(randomdat$var1+50, randomdat$var5, spar = 1)
lines(smooth_50, col = 'red', lwd = 2, lth = 3)
par(mfrow = c(1,3))
plot(randomdat$var1+50, randomdat$var5)
smooth_50 <- smooth.spline(randomdat$var1+50, randomdat$var5, spar = 1)
lines(smooth_50, col = 'red', lwd = 2, lth = 3)
plot(sqrt(randomdat$var1+50), randomdat$var5)
smooth_sq50 <- smooth.spline(sqrt(randomdat$var1+50), randomdat$var5, spar = 1)
lines(smooth_sq50, col = 'red', lwd = 2, lth = 3)
plot((randomdat$var1+50)^2, randomdat$var5)
smooth_square50 <- smooth.spline((randomdat$var1+50)^2, randomdat$var5, spar = 1)
lines(smooth_square50, col = 'red', lwd = 2, lth = 3)
plot(smooth_50)
plot(smooth_50)
m5_50 <- lm(var5~var1+50, data = randomdat)
m5_orig <- lm(var4 ~ var1, data=randomdat)
randomdat$var5_zero <- randomdat$var5 +50
randomdat$var5_zero <- randomdat$var5 +50
randomdat$var5_sqrt <- sqrt(randomdat$var5_zero)
randomdat$var5_square <- (randomdat$var5_zero)^2
m5_50 <- lm(var5~var5_zero, data = randomdat)
randomdat$var5_zero <- randomdat$var5 +50
randomdat$var5_sqrt <- sqrt(randomdat$var5_zero)
randomdat$var5_square <- (randomdat$var5_zero)^2
m5_50 <- lm(var5~var5_zero, data = randomdat)
m5_sq <- lm(var5~var5_sqrt, data = randomdat)
m5_square <- lm(var5~var5_square, data = randomdat)
plot(m5_sq)
par(mfrow = c(1,3))
par(mfrow = c(1,3))
plot(m5_50)
plot(m5_square)
plot(m5_sq)
plot(m5_50)
plot(m5_50)
plot(m5_square)
par(mfrow = c(1,1))
par(mfrow = c(1,1))
plot(randomdat$var1+50, randomdat$var5)
par(mfrow = c(1,3))
plot(m5_50)
plot(m5_50)
plot(m5_square)
plot(m5_sq)
plot(m5_sq)
plot(m5_50)
plot(m5_square)
par(mfrow = c(1,1))
par(mfrow = c(1,1))
par(mfrow = c(1,1))
plot(m5_50)
plot(m5_50)
plot(m5_square)
plot(randomdat$var1+50, randomdat$var5)
plot(randomdat$var1+50, randomdat$var5)
plot(randomdat$var1+50, randomdat$var5)
plot(m5_50)
par(mfrow = c(1,3))
par(mfrow = c(1,3))
par(mfrow = c(1,3))
par(mfrow = c(1,3))
par(mfrow = c(1,3))
par(mfrow = c(1,3))
plot(m5_50)
plot(randomdat$var1+50, randomdat$var5)
plot(randomdat$var1+50, randomdat$var5)
plot(randomdat$var1+50, randomdat$var5)
plot(randomdat$var1+50, randomdat$var5)
plot(randomdat$var1+50, randomdat$var5)
plot(randomdat$var1+50, randomdat$var5)
plot(randomdat$var1+50, randomdat$var5)
plot(randomdat$var1+50, randomdat$var5)
plot(randomdat$var1+50, randomdat$var5)
plot(randomdat$var1+50, randomdat$var5)
plot(randomdat$var1+50, randomdat$var5)
plot(randomdat$var1+50, randomdat$var5)
plot(randomdat$var1+50, randomdat$var5)
plot(randomdat$var1+50, randomdat$var5)
plot(randomdat$var1+50, randomdat$var5)
plot(randomdat$var1+50, randomdat$var5)
plot(randomdat$var1+50, randomdat$var5)
plot(randomdat$var1+50, randomdat$var5)
par(mfrow = c(1,1))
plot(randomdat$var1+50, randomdat$var5)
plot(m5_sq)
plot(m5_sq)
plot(m5_square)
plot(m5_square)
plot(randomdat$var1+50, randomdat$var5)
plot(m5_50)
plot(m5_sq)
summary(m5_50)
plot(randomdat$var1+50, randomdat$var5)
randomdat$var1_zero <- randomdat$var1 +50
randomdat$var1_sqrt <- sqrt(randomdat$var1_zero)
randomdat$var1_square <- (randomdat$var1_zero)^2
m5_50 <- lm(var5~var1_zero, data = randomdat)
m5_sq <- lm(var5~var1_sqrt, data = randomdat)
m5_square <- lm(var5~var1_square, data = randomdat)
plot(m5_50)
plot(m5_sq)
plot(m5_square)
plot(m5_50)
m5_503 <- lm(var5~var1_zero + I(var1_zero)^2 + I(var1_zero)^3, data = randomdat)
plot(m5_503)
summary(m5_503)
summary(m4)
summary(m5_503)
plot(sqrt(randomdat$var1+50),randomdat$var4)
smooth <- smooth.spline(sqrt(randomdat$var1+50),randomdat$var4, spar=1)
lines(smooth, col='red', lwd = 2, lty = 2)
summary(m5_sqrt)
m5_predict<- predict(m5_sqrt,list(var1sqrt=sqrt(var1seq+50)))
plot(sqrt(randomdat$var1+50),randomdat$var4)
lines(sqrt(var1seq+50), m5_predict, col = "blue", lwd = 3)
m4_a <- lm(var3~var1+I(var1^2)+I(var1^3), data=randomdat[randomdat$var8=="Group A",])
m5_50 <- lm(var5~var1_zero, data = randomdat)
plot(m5_50)
m5_50_predict <- predict(m5_50, list(var1_zero = var1seq))
plot(randomdat$var1+50, randomdat$var5)
lines(var1seq, m5_50_predict, col = 'red', lwd = 2, lth = 3)
predict(m5_50_predict, list(var1_zero=100+50))
predict(m5_50_predict, list(var1_zero=150))
predict(m4, list(var1=65))
m5_50_predict <- predict(m5_50, list(var1_zero = var1seq))
predict(m5_50, list(var1_zero=150))
m6_2<-lm(var5~var1 + var10, data = randomdat)
summary(m6_2)
View(randomdat)
View(randomdat)
m8 <- lm(var11~var1+var2+var3+var4+var5+var8+var10, data=randomdat)
summary(m8)
View(randomdat)
View(randomdat800up)
View(randomdat)
m9_lm <-lm(var11~var1+var2+var3+var4+var5+var6+var7+var8+var9+var10, data = randomdat)
step(m9_lm, direction = 'bakcward')
step(m9_lm, direction = 'backward')
summary(m9_lm)
m9 <-lm(var11~var1+var2+var4+var5+var7+var10, data = randomdat)
step(m9, direction = 'backward')
summary(m9)
step(m9_lm, direction = 'both')
m9 <- lm(var7~var1*var8, data = randomdat)
summary(m9)
cor(randomdat[,c(1:7,11)])
vocab <- read.csv("vocab.csv",header=T)
View(vocab)
View(vocab)
plot(vocab$education, vocab$vocabulary)
sp(vocab$education, vocab$vocabulary, jitter = list(x=2, y=2))
sp(vocab$education, vocab$vocabulary, jitter = list(x=3,y=3))
sp(vocab$education, vocab$vocabulary)
sp(vocab$education, vocab$vocabulary)
sp(vocab$education, vocab$vocabulary, jitter = list(x=3,y=3))
sp(vocab$education, vocab$vocabulary, jitter = list(x=1,y=1))
?sp
sp(vocab$education, vocab$vocabulary)
sp(vocab$education, vocab$vocabulary, jitter = list(x=2,y=1))
sp(vocab$education, vocab$vocabulary, jitter = list(x=2,y=2))
sunflowerplot(vocab$education, vocab$vocabulary)
smoothScatter(vocab$education, vocab$vocabulary)
