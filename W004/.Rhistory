courses <- c("4", "8", "12", "unknown", "12", "6", "10", "9", "10", "13")
samp <- data.frame(major, units, courses, avggrade)
(major, units, courses, avggrade)
remove(major, units, courses, avggrade)
samp
summary(samp)
num_major <- as.numeric(samp$major)
num_major
levels(samp$major)
samp
samp$major <-as.factor(samp$major)
summary(samp)
samp$courses <-as.factor(samp$courses)
samp$avggrade  <-as.factor(samp$avggrade)
summary(samp)
levels(samp$major)
num_major <- as.numeric(samp$major)
num_major
num_major <- as.numeric(samp$courses)
num_major <- as.numeric(samp$major)
num_courses <- as.numeric(samp$courses)
num_courses
levels(samp$courses)
num_courses
num_courses <- as.numeric(as.numeric(samp$courses))
num_courses
num_courses <- as.numeric(as.character(samp$courses))
num_courses
levels(samp$avggrade)
num_avggrade_temp <- factor(sam$avggrade, levels = c("A", "B", "C", "D", "F"), labels = 4:0)
num_avggrade_temp <- factor(samp$avggrade, levels = c("A", "B", "C", "D", "F"), labels = 4:0)
num_avggrade_temp
num_avggrafe <- as.numeric(as.charactetr(samp$avggrade))
num_avggrafe <- as.numeric(as.charactetr(num_avggrade_temp))
num_avggrafe <- as.numeric(as.characterr(samp$avggrade))
num_avggrafe <- as.numeric(as.character(samp$avggrade))
num_avggrade <- as.numeric(as.character(samp$avggrade))
remove(num_avggrafe)
num_avggrade
num_avggrade <- as.numeric(as.character(num_avggrade_temp))
num_avggrade
num_avggrade_temp
## Common non-linear transformations include exp(), log(), sqrt(),or power (usually squared or cubed)
newdat <- read.table("rand1.txt", sep = "\t", header = T)		## sep = ";", sep = ".", sep = ","
newdat <- read.table("rand1.txt", sep = "\t", header = T)
newdat <- read.table("rand1.txt", sep = "\t", header = T)
head(newdat)
View(newdat)
View(newdat)
View(newdat)
View(newdat)
summary(newdat)
box(log(newdat))
box(log(newdat$var1))
boxplot(log(newdat$var1))
boxplot(log(newdat$var1))
## The higher your number, the more it gets scaled back
## ** Good for right skewed data
boxplot(log(newdat$var1), ylab = "Log of var1")			## e^y = x
## The higher your number, the more it gets scaled back
## ** Good for right skewed data
boxplot(log(newdat$var1), ylab = "Log of var1")			## e^y = x
boxplot(log(newdat$var1), ylab = "Log of var1")
hist(log(newdat$var1))
boxplot(log(newdat$var1), ylab = "Log of var1")
boxplot(log(newdat$var2))
boxplot(newdat$var2)
boxplot(log(newdat$var2))
boxplot(sqrt(newdat$var2)
boxplot(newdat$var2)
boxplot(newdat$var2)
boxplot(sqrt(newdat$var2)
library(readxl)
library(car)
library(hexbin)
library(readxl)
boxplot(sqrt(newdat$var2)
boxplot(sqrt(newdat$var2))		## rule of thumb: keep it simple, or go with prior literature
hist(sqrt(newdat$var2))		##		or use your best judgement
hist(log(newdat$var2))
boxplot(log(newdat$var2))		## probably not a good idea
hist(log(newdat$var2))
hist(sqrt(newdat$var2))		##		or use your best judgement
boxplot(newdat$var2)		## this might be okay to leave as is!
hist(newdat$var2)
boxplot(log(newdat$var2))		## probably not a good idea
hist(log(newdat$var2))
boxplot(sqrt(newdat$var2))		## rule of thumb: keep it simple, or go with prior literature
hist(sqrt(newdat$var2))
powexample <- c(1, 1.4, 1.8, 2, 2.1, 2.05, 2.08, 2.09)
boxplot(powexample)
hist(powexample)
boxplot(powexample^16)		## arbitrarily picked 16th power
hist(powexample^16)
boxplot(powexample^2)			## trade-off between keeping things simple/interpretable vs. looking "nice"
hist(powexample^2)
##### Read in dataset #####
poverty<-read_excel("poverty.xls", sheet = 1)
poverty<-as.data.frame(poverty)			## Convert tibble to data frame
poverty$gnp<-as.numeric(poverty$gnp)		## convert gnp to numeric
poverty <- poverty[!is.na(poverty$gnp),]	## Removing countries without GNP
##### Read in dataset #####
poverty<-read_excel("poverty.xls", sheet = 1)
poverty
summary(poverty$gnp)
poverty$gnp<-as.numeric(poverty$gnp)		## convert gnp to numeric
summary(poverty$gnp)
poverty <- poverty[!is.na(poverty$gnp),]
poverty$gnp
str(poverty$gnp)
dim(poverty)
poverty<-read_excel("poverty.xls", sheet = 1)
poverty<-as.data.frame(poverty)			## Convert tibble to data frame
poverty$gnp<-as.numeric(poverty$gnp)
dim(poverty)
poverty <- poverty[!is.na(poverty$gnp),]	## Removing countries without GNP
plot(poverty[,1:7])
plot(poverty[,1:4])
plot(poverty[,2:4])
plot(poverty$birthrt, poverty$deathrt, main = "Birth and Death Rates Scatterplot",
pch = 17, col = "red", xlab = "Birth Rate", ylab = "Death Rate")
text(25,20, labels = "Label centered at (25,20)", adj=0.5)
text(25,20, labels = "Label centered at (25,20)", adj=3)
text(25,20, labels = "Label centered at (25,20)", adj=1.5)
text(25,20, labels = "Label centered at (25,20)...........", adj=0)
plot(poverty$birthrt, poverty$deathrt, main = "Birth and Death Rates Scatterplot",
pch = 17, col = "red", xlab = "Birth Rate", ylab = "Death Rate")
text(25,20, labels = "Label centered at (25,20)...........", adj=0)
text(25,20, labels = "Label centered at (25,20)...........", adj=-0.5)
plot(poverty$birthrt, poverty$deathrt, main = "Birth and Death Rates Scatterplot",
pch = 17, col = "red", xlab = "Birth Rate", ylab = "Death Rate")
text(25,20, labels = "Label centered at (25,20)...........", adj=-0.5)
text(25,20, labels = "Label centered at (25,20)...........", adj=0.5)
## adj = 0 is left/bottom aligned, 1 is right/top aligned, and 0.5 is centered
grid(col = "gray70")
## adj = 0 is left/bottom aligned, 1 is right/top aligned, and 0.5 is centered
grid(col = "gray30")
## adj = 0 is left/bottom aligned, 1 is right/top aligned, and 0.5 is centered
grid(col = "red")
## adj = 0 is left/bottom aligned, 1 is right/top aligned, and 0.5 is centered
grid(col = "red30")
## adj = 0 is left/bottom aligned, 1 is right/top aligned, and 0.5 is centered
grid(col = "grey30")
poverty
str(poverty)
names(poverty)
levels(poverty$region)
poverty$gnp[povert$region == 1]
poverty$gnp[poverty$region == 1]
##??? PRACTICE: Graph male life expectancy vs. female life expectancy by region
plot(poverty$lexpm, poverty$lexpf)
##??? PRACTICE: Graph male life expectancy vs. female life expectancy by region
plot(poverty$lexpm, poverty$lexpf, main = 'life expectancy male V.S. female')
plot(poverty$lexpm, poverty$lexpf, main = 'Life expectancy male V.S. female',
xlab = 'male age', ylab = 'female age')
##??? PRACTICE: Graph male life expectancy vs. female life expectancy by region
plot(poverty$lexpm, poverty$lexpf, main = 'Life expectancy male V.S. female',
xlab = 'male age', ylab = 'female age', pch = 17, color = 'red')
plot(poverty$lexpm, poverty$lexpf, main = 'Life expectancy male V.S. female',
xlab = 'male age', ylab = 'female age', pch = 17, color = 'red')
plot(poverty$lexpm, poverty$lexpf, main = 'Life expectancy male V.S. female',
xlab = 'male age', ylab = 'female age', pch = 17, col = 'red')
plot(poverty$lexpm, poverty$lexpf, main = 'Life expectancy male V.S. female',
xlab = 'male age', ylab = 'female age', pch = 17, col = "purple")
plot(poverty$lexpm, poverty$lexpf, main = 'Life expectancy male V.S. female',
xlab = 'male age', ylab = 'female age', pch = 17, col = "red")
plot(poverty$lexpm, poverty$lexpf, main = 'Life expectancy male V.S. female',
xlab = 'male age', ylab = 'female age', pch = 17, col = 'red')
plot(poverty$lexpm[poverty$region == 1], poverty$lexpf[poverty$region == 1], main = 'Life expectancy male V.S. female',
xlab = 'male age', ylab = 'female age', pch = 17, col = 'red')
plot(poverty$lexpm[poverty$region == 1], poverty$lexpf[poverty$region == 1], main = 'Life expectancy male V.S. female',
xlim = c(10,90), xlab = 'male age', ylab = 'female age', pch = 17, col = 'red')
plot(poverty$lexpm[poverty$region == 1], poverty$lexpf[poverty$region == 1], main = 'Life expectancy male V.S. female',
xlim = c(38,84), ylim = c(0,200), xlab = 'male age', ylab = 'female age', pch = 17, col = 'red')
plot(poverty$lexpm[poverty$region == 1], poverty$lexpf[poverty$region == 1], main = 'Life expectancy male V.S. female',
xlim = c(38,84), ylim = c(0,200), xlab = 'male age', ylab = 'female age', pch = 17, col = 'red')
points(poverty$lexpm[poverty$region == 2], poverty$lexpf[poverty$region == 2],
col = 'green')
plot(poverty$lexpm[poverty$region == 1], poverty$lexpf[poverty$region == 1], main = 'Life expectancy male V.S. female',
xlim = c(38,84), ylim = c(0,200), xlab = 'male age', ylab = 'female age', pch = 17, col = 'red')
points(poverty$lexpm[poverty$region == 2], poverty$lexpf[poverty$region == 2],
col = 'orange')
points(poverty$lexpm[poverty$region == 3], poverty$lexpf[poverty$region == 3],
col = 'yellow')
points(poverty$lexpm[poverty$region == 4], poverty$lexpf[poverty$region == 4],
col = 'green')
points(poverty$lexpm[poverty$region == 5], poverty$lexpf[poverty$region == 5],
col = 'blue')
points(poverty$lexpm[poverty$region == 6], poverty$lexpf[poverty$region == 6],
col = 'purple')
plot(poverty$lexpm[poverty$region == 1], poverty$lexpf[poverty$region == 1], main = 'Life expectancy male V.S. female',
xlim = c(0,80), ylim = c(0,100), xlab = 'male age', ylab = 'female age', pch = 17, col = 'red')
points(poverty$lexpm[poverty$region == 2], poverty$lexpf[poverty$region == 2],
col = 'orange')
points(poverty$lexpm[poverty$region == 3], poverty$lexpf[poverty$region == 3],
col = 'yellow')
points(poverty$lexpm[poverty$region == 4], poverty$lexpf[poverty$region == 4],
col = 'green')
points(poverty$lexpm[poverty$region == 5], poverty$lexpf[poverty$region == 5],
col = 'blue')
points(poverty$lexpm[poverty$region == 6], poverty$lexpf[poverty$region == 6],
col = 'purple')
plot(poverty$lexpm[poverty$region == 1], poverty$lexpf[poverty$region == 1], main = 'Life expectancy male V.S. female',
xlim = c(30,80), ylim = c(0,100), xlab = 'male age', ylab = 'female age', pch = 17, col = 'red')
points(poverty$lexpm[poverty$region == 2], poverty$lexpf[poverty$region == 2],
col = 'orange')
points(poverty$lexpm[poverty$region == 3], poverty$lexpf[poverty$region == 3],
col = 'yellow')
points(poverty$lexpm[poverty$region == 4], poverty$lexpf[poverty$region == 4],
col = 'green')
points(poverty$lexpm[poverty$region == 5], poverty$lexpf[poverty$region == 5],
col = 'blue')
points(poverty$lexpm[poverty$region == 6], poverty$lexpf[poverty$region == 6],
col = 'purple')
plot(poverty$lexpm[poverty$region == 1], poverty$lexpf[poverty$region == 1], main = 'Life expectancy male V.S. female',
xlim = c(30,80), ylim = c(20,80), xlab = 'male age', ylab = 'female age', pch = 17, col = 'red')
points(poverty$lexpm[poverty$region == 2], poverty$lexpf[poverty$region == 2],
col = 'orange')
points(poverty$lexpm[poverty$region == 3], poverty$lexpf[poverty$region == 3],
col = 'yellow')
points(poverty$lexpm[poverty$region == 4], poverty$lexpf[poverty$region == 4],
col = 'green')
points(poverty$lexpm[poverty$region == 5], poverty$lexpf[poverty$region == 5],
col = 'blue')
points(poverty$lexpm[poverty$region == 6], poverty$lexpf[poverty$region == 6],
col = 'purple')
plot(poverty$lexpm[poverty$region == 1], poverty$lexpf[poverty$region == 1], main = 'Life expectancy male V.S. female',
xlim = c(30,80), ylim = c(30,85), xlab = 'male age', ylab = 'female age', pch = 17, col = 'red')
points(poverty$lexpm[poverty$region == 2], poverty$lexpf[poverty$region == 2],
col = 'orange')
points(poverty$lexpm[poverty$region == 3], poverty$lexpf[poverty$region == 3],
col = 'yellow')
points(poverty$lexpm[poverty$region == 4], poverty$lexpf[poverty$region == 4],
col = 'green')
points(poverty$lexpm[poverty$region == 5], poverty$lexpf[poverty$region == 5],
col = 'blue')
points(poverty$lexpm[poverty$region == 6], poverty$lexpf[poverty$region == 6],
col = 'purple')
plot(poverty$lexpm[poverty$region == 1], poverty$lexpf[poverty$region == 1], main = 'Life expectancy male V.S. female',
xlim = c(30,80), ylim = c(30,85), xlab = 'male age', ylab = 'female age', pch = 17, col = 'red')
points(poverty$lexpm[poverty$region == 2], poverty$lexpf[poverty$region == 2],
pch = 17, col = 'orange')
points(poverty$lexpm[poverty$region == 3], poverty$lexpf[poverty$region == 3],
pch = 17, col = 'yellow')
points(poverty$lexpm[poverty$region == 4], poverty$lexpf[poverty$region == 4],
pch = 17, col = 'green')
points(poverty$lexpm[poverty$region == 5], poverty$lexpf[poverty$region == 5],
pch = 17, col = 'blue')
points(poverty$lexpm[poverty$region == 6], poverty$lexpf[poverty$region == 6],
pch = 17, col = 'purple')
legend('topleft', c('region1', 'region2', 'region3', 'region4', 'region5', 'region6',
color = c('red','orange', 'yellow', 'green', 'blue', 'purple')))
legend('topleft', c('region1', 'region2', 'region3', 'region4', 'region5', 'region6',
col = c('red','orange', 'yellow', 'green', 'blue', 'purple')))
legend('topleft', c('region1', 'region2', 'region3', 'region4', 'region5', 'region6'),
col = c('red','orange', 'yellow', 'green', 'blue', 'purple'))
plot(poverty$lexpm[poverty$region == 1], poverty$lexpf[poverty$region == 1], main = 'Life expectancy male V.S. female',
xlim = c(30,80), ylim = c(30,85), xlab = 'male age', ylab = 'female age', pch = 17, col = 'red')
points(poverty$lexpm[poverty$region == 2], poverty$lexpf[poverty$region == 2],
pch = 17, col = 'orange')
points(poverty$lexpm[poverty$region == 3], poverty$lexpf[poverty$region == 3],
pch = 17, col = 'yellow')
points(poverty$lexpm[poverty$region == 4], poverty$lexpf[poverty$region == 4],
pch = 17, col = 'green')
points(poverty$lexpm[poverty$region == 5], poverty$lexpf[poverty$region == 5],
pch = 17, col = 'blue')
points(poverty$lexpm[poverty$region == 6], poverty$lexpf[poverty$region == 6],
pch = 17, col = 'purple')
legend('topleft', c('region1', 'region2', 'region3', 'region4', 'region5', 'region6'),
col = c('red','orange', 'yellow', 'green', 'blue', 'purple'))
plot(poverty$lexpf[poverty$region == 1], poverty$infmort[poverty$region == 1],
main = "Infant Mortality and Female Life Expectancy",
xlim = c(38,84), ylim = c(0,200), xlab = "Female Life Expectancy",
ylab = "Infant Mortality", pch = 17, col = "red")
## MAKE SURE xlim and ylim cover the full data (otherwise, other points might get cut-off later)
points(poverty$lexpf[poverty$region == 2], poverty$infmort[poverty$region == 2],
pch = 18, col = "green")
points(poverty$lexpf[poverty$region == 3], poverty$infmort[poverty$region == 3],
pch = 19, col = "blue")
points(poverty$lexpf[poverty$region == 4], poverty$infmort[poverty$region == 4],
pch = 20, col = "gray50")
points(poverty$lexpf[poverty$region == 5], poverty$infmort[poverty$region == 5],
pch = 21, col = "black")
points(poverty$lexpf[poverty$region == 6], poverty$infmort[poverty$region == 6],
pch = 15, col = "purple")
legend("topright", c("Region 1", "Region 2", "Region 3", "Region 4", "Region 5", "Region 6"),
col = c("red", "green", "blue", "gray50", "black", "purple"),pch = c(17:21,15))
xlim = c(30,80), ylim = c(30,85), xlab = 'male age', ylab = 'female age', pch = 17, col = 'red')
points(poverty$lexpm[poverty$region == 2], poverty$lexpf[poverty$region == 2],
pch = 17, col = 'orange')
points(poverty$lexpm[poverty$region == 3], poverty$lexpf[poverty$region == 3],
pch = 17, col = 'yellow')
points(poverty$lexpm[poverty$region == 4], poverty$lexpf[poverty$region == 4],
pch = 17, col = 'green')
points(poverty$lexpm[poverty$region == 5], poverty$lexpf[poverty$region == 5],
pch = 17, col = 'blue')
points(poverty$lexpm[poverty$region == 6], poverty$lexpf[poverty$region == 6],
pch = 17, col = 'purple')
legend('topleft', c('region1', 'region2', 'region3', 'region4', 'region5', 'region6'),
col = c('red','orange', 'yellow', 'green', 'blue', 'purple'),
pch = 17)
plot(poverty$lexpm[poverty$region == 1], poverty$lexpf[poverty$region == 1], main = 'Life expectancy male V.S. female',
xlim = c(30,80), ylim = c(30,85), xlab = 'male age', ylab = 'female age', pch = 17, col = 'red')
points(poverty$lexpm[poverty$region == 2], poverty$lexpf[poverty$region == 2],
pch = 17, col = 'orange')
points(poverty$lexpm[poverty$region == 3], poverty$lexpf[poverty$region == 3],
pch = 17, col = 'yellow')
points(poverty$lexpm[poverty$region == 4], poverty$lexpf[poverty$region == 4],
pch = 17, col = 'green')
points(poverty$lexpm[poverty$region == 5], poverty$lexpf[poverty$region == 5],
pch = 17, col = 'blue')
points(poverty$lexpm[poverty$region == 6], poverty$lexpf[poverty$region == 6],
pch = 17, col = 'purple')
legend('topleft', c('region1', 'region2', 'region3', 'region4', 'region5', 'region6'),
col = c('red','orange', 'yellow', 'green', 'blue', 'purple'),
pch = 17)
names(poverty)
model <- lm(lexpm, lexpf)
model <- lm(poverty$lexpm, poverty$lexpf)
model <- lm(lexpm~lexpf, data = poverty)
model
summary(model)
summary(model0)
model0 <- lm(lexpf~lexpm, data=poverty)
model0
summary(model0)
model1 <- lm(infmort~lexpf, data=poverty)
model1
summary(model1)
plot(model1)
modelx <- lm(poverty$deathrt ~ poverty$birthrt)
plot(poverty$birthrt, poverty$deathrt)
modelx <- lm(poverty$deathrt ~ poverty$birthrt)
modelx <- lm(poverty$deathrt ~ poverty$birthrt)
modelx <- lm(poverty$deathrt ~ poverty$birthrt)
plot(model1)
plot(modelx)
modelx <- lm(poverty$deathrt ~ poverty$birthrt)
plot(poverty$birthrt, poverty$deathrt)
abline(modelx)
plot(modelx)
2+3
modelx <- lm(poverty$deathrt ~ poverty$birthrt)
View(modelx)
View(modelx)
plot(poverty$lexpm, type = "n")
## This will give you the same thing as plot()
## except in two steps (axes first, then points)
plot(poverty$lexpm, type = "s")
## This will give you the same thing as plot()
## except in two steps (axes first, then points)
plot(poverty$lexpm, type = "h")
## This will give you the same thing as plot()
## except in two steps (axes first, then points)
plot(poverty$lexpm, type = "c")
## This will give you the same thing as plot()
## except in two steps (axes first, then points)
plot(poverty$lexpm, type = "b")
## This will give you the same thing as plot()
## except in two steps (axes first, then points)
plot(poverty$lexpm, type = "l")
## This will give you the same thing as plot()
## except in two steps (axes first, then points)
plot(poverty$lexpm, type = "p")
lines(poverty$lexpm, col = "red", type = "p")	## adding points to the graph
names(poverty)
View(poverty)
View(poverty)
order <- poverty[order(poverty$lexpm, poverty$lexpm),]
View(order)
View(order)
order2 <- poverty[order(poverty$lexpm),]
View(order2)
View(order2)
plot(order2$lempm, order2$lempf)
order2$lempm
plot(order2$lexpm, order2$lexpf)
plot(order2$lexpm, order2$lexpf, type = 'l')
plot(order$lexpm, order$lexpf, type = 'l')
save(order, 'order.csv')
write.csv(order, 'order.csv')
write.csv(order2, 'order2.csv')
?plot
plot(poverty$lexpf, poverty$birthrt)
smooth <- smooth.spline(poverty$lexpf, poverty$birthrt, spar = 1)
smooth
lines(smooth, col='red', lwd= 2)
smooth <- smooth.spline(poverty$lexpf, poverty$birthrt, spar = 2)
lines(smooth, col='red', lwd= 2)
plot(poverty$lexpf, poverty$birthrt)
smooth <- smooth.spline(poverty$lexpf, poverty$birthrt, spar = 2)
lines(smooth, col='red', lwd= 2)
smooth <- smooth.spline(poverty$lexpf, poverty$birthrt, spar = 2, xlim =c(30,80),
ylim=c(0,70))
lines(smooth, col='red', lwd= 2)
plot(poverty$lexpf, poverty$birthrt, xlim =c(30,80),
ylim=c(0,70))
smooth <- smooth.spline(poverty$lexpf, poverty$birthrt, spar = 2)
lines(smooth, col='red', lwd= 2)
smooth <- smooth.spline(poverty$lexpf, poverty$birthrt, spar = 3)
lines(smooth, col='red', lwd= 2)
smooth <- smooth.spline(poverty$lexpf, poverty$birthrt, spar = 0.5)
lines(smooth, col='red', lwd= 2)
I(lexpf^2)
lexpf^2
model3 <- lm(birthrt~I(lexpf^2), data=poverty)
summary(model3)
plot(model3)
plot(order$lexpm, order$lexpf, type = 'l')
plot(order$lexpm, order$lexpf, type = 'l')
plot(order$lexpm, order$lexpf, type = 'l')
plot(order$lexpm, order$lexpf, type = 'l')
plot(order$lexpm, order$lexpf, type = 'l')
plot(order$lexpm, order$lexpf, type = 'l')
poverty<-read_excel("poverty.xls", sheet = 1)
poverty<-as.data.frame(poverty)			## Convert tibble to data frame
poverty$gnp<-as.numeric(poverty$gnp)		## convert gnp to numeric
poverty <- poverty[!is.na(poverty$gnp),]
poverty<-read_excel("poverty.xls", sheet = 1)
setwd("C:/Users/ppwan/!002. School related/006. Exploratory Data Analysis and Visualization/W004")
poverty<-read_excel("poverty.xls", sheet = 1)
library(readxl)
poverty<-read_excel("poverty.xls", sheet = 1)
poverty<-as.data.frame(poverty)			## Convert tibble to data frame
poverty$gnp<-as.numeric(poverty$gnp)		## convert gnp to numeric
poverty <- poverty[!is.na(poverty$gnp),]
model3 <- lm(birthrt~I(lexpf^2), data=poverty)
summary(model3)
plot(model3)
model4 <- lm(birthrt~I(lexpf^2), data = poverty)
plot(model4)
plot(model4)
plot(density(normalpoints))
normalpoints <- rnorm(1000000)
plot(density(normalpoints))
polygon(density(normalpoints), col = "red")
normalpoints <- rnorm(100000) ## a million random points drawn from the normal distribution
plot(density(normalpoints))
polygon(density(normalpoints), col = "green")
normalpoints <- rnorm(1000000) ## a million random points drawn from the normal distribution
plot(density(normalpoints))
polygon(density(normalpoints), col = "red")
normalpoints <- rnorm(100000) ## a million random points drawn from the normal distribution
plot(density(normalpoints))
polygon(density(normalpoints), col = "green", add = T)
normalpoints <- rnorm(1000) ## a million random points drawn from the normal distribution
plot(density(normalpoints))
polygon(density(normalpoints), col = "green")
normalpoints <- rnorm(10000) ## a million random points drawn from the normal distribution
plot(density(normalpoints))
polygon(density(normalpoints), col = "green")
normalpoints <- rnorm(10) ## a million random points drawn from the normal distribution
plot(density(normalpoints))
polygon(density(normalpoints), col = "green")
normalpoints
normalpoints <- rnorm(100000)
normalpoints
normalpoints <- rnorm(1000000) ## a million random points drawn from the normal distribution
plot(density(normalpoints))
polygon(density(normalpoints), col = "red")
normalpoints <- rnorm(1000000)*100
normalpoints
normalpoints <- rnorm(1000000)
?pnorm
pnorm(72, mean=81, sd= 8)
pnomr(-1.125)
pnorm(-1.125)
testA <- pnorm(85, mean = 81, sd = 5)
testB <- pnorm(87, mean = 81, sd = 8)
testA > testB
normalpoints2 <- rnorm(1000000)
plot(normalpoints2)
plot(density(normalpoints2))
plot(density(normalpoints2))
testA
abline(v=0.7881446, lty = 3, col = 'blue' )
polygon(density(testA), col = 'red')
testB
abline(v=0.7881446, lty = 2, col = 'blue' )
abline(v=0.7733726, lty = 2, col = 'red' )
abline(v=0.7881446, lty = 2, col = 'blue' )
abline(v=0.7733726, lty = 2, col = 'red' )
pnorm(0.7881446)
text(-2,0, labels = '78.46% of student below me')
text(-2,0.2, labels = '78.46% of student below me')
normalpoints2 <- rnorm(1000000)
plot(density(normalpoints2))
abline(v=0.7881446, lty = 2, col = 'blue' )
abline(v=0.7733726, lty = 2, col = 'red' )
text(-2,0.2, labels = '78.46% of student below me')
plot(density(normalpoints2))
abline(v=0.7881446, lty = 2, col = 'blue' )
abline(v=0.7733726, lty = 2, col = 'red' )
text(-2,0.2, labels = '78.46% of student \nbelow me')
pnorm(0.7881446, lower.tail = F)
plot(density(normalpoints2))
abline(v=0.7881446, lty = 2, col = 'blue' )
abline(v=0.7733726, lty = 2, col = 'red' )
text(-2,0.2, labels = '78.46% of student \nbelow me in Test A')
text(2,0.2, labels = '21.53% of student \nbelow me in Test A')
plot(density(normalpoints2))
abline(v=0.7881446, lty = 2, col = 'blue' )
abline(v=0.7733726, lty = 2, col = 'red' )
text(-2,0.2, labels = '78.46% of student \nbelow me in Test A')
text(3,0.2, labels = '21.53% of student \nbelow me in Test A')
pnorm(85, mean = 81, sd = , lower.tail = F)
pnorm(85, mean = 81, sd = 5, lower.tail = F)
pnorm(75, mean = 81, sd =5)
pnorm(0, mean = 81, sd =5)
testA <- pnorm(85, mean = 81, sd = 5)
pnorm(85, mean = 81, sd = 5)
pnorm(75, mean = 81, sd =5)
